// https://medium.com/@vilcins/usefull-sass-mixins-7a68c5491bda


/*
 * Apply a CSS3 transition
 *
 * $property The property you want to animate, eg opacity
 * $duration The duration of the animation, eg 1s
 * $ms Include -ms-transition; default is false because IE does not support transitionEnd callback
 *
 * @include transition(opacity, 0.5s);
 */
@mixin transition($property, $duration, $ms: false) {
  -webkit-transition: $property $duration ease-in-out;
  -moz-transition: $property $duration ease-in-out;
  -o-transition: $property $duration ease-in-out;

  @if ($ms) {
    -ms-transition: $property $duration ease-in-out;
  }

  transition: $property $duration ease-in-out;
}

@mixin transitionLong($property, $duration, $easing:ease-in-out, $delay:false) {
  @include transitionProperty($property);
  @include transitionDuration($duration);

  @if($delay) {
    @include transitionDelay($delay);
  }

  @if($easing) {
    @include transitionTimingFunction($easing);
  }
}

/*
 * Apply a CSS3 transition-delay
 * @include transitionDelay(2s);
 */
@mixin transitionDelay($delay) {
  -webkit-transition-delay: $delay;
  -moz-transition-delay: $delay;
  -o-transition-delay: $delay;
  -ms-transition-delay: $delay;
  transition-delay: $delay;
}

/*
 * Apply a CSS3 transition-duration
 * @include transitionDuration(1s);
 */
@mixin transitionDuration($duration) {
  -webkit-transition-duration: $duration;
  -moz-transition-duration: $duration;
  -o-transition-duration: $duration;
  -ms-transition-duration: $duration;
  transition-duration: $duration;
}

/*
 * Apply a CSS3 transition-property
 * @include transitionProperty(opacity);
 * @include transitionProperty((height, width)); Multiple properties can be passed in surrounded by brackets
 */
@mixin transitionProperty($property) {
  -webkit-transition-property: $property;
  -moz-transition-property: $property;
  -o-transition-property: $property;
  -ms-transition-property: $property;
  transition-property: $property;
}

/*
 * Apply a CSS3 transition-timing-function
 * @include transitionTimingFunction(easing);
 */
@mixin transitionTimingFunction($easing) {
  -webkit-transition-timing-function: $easing;
  -moz-transition-timing-function: $easing;
  -o-transition-timing-function: $easing;
  -ms-transition-timing-function: $easing;
  transition-timing-function: $easing;
}

// @include fade(hide); @include fade(show);
@mixin fade($type) {
  @if $type=='hide' {
    visibility: hidden;
    opacity: 0;
    transition: visibility 1s, opacity 1s;
  }

  @else if $type=='show' {
    visibility: visible;
    opacity: 1;
    transition: visibility 1s, opacity 1s;
  }
}

//@include prefix(transform, rotate(42deg), webkit ms)
@mixin prefix($property, $value, $vendors: webkit moz ms o) {
  @if $vendors {
    @each $vendor in $vendors {
      #{"-" + $vendor + "-" + $property}: #{$value};
    }
  }

  #{$property}: #{$value};
}

//@include font-size(18px);
// @function calculateRem($size) {
//   $remSize: $size / 14px;
//   @return $remSize * 1rem;
// }

// @mixin font-size($size) {
//   font-size: $size;
//   font-size: calculateRem($size);
// }

// //@include hide-text
// @mixin hide-text {
//   overflow: hidden;
//   text-indent: -9000px;
//   display: block;
// }


// @include keyframes(slide-down) {
// 	0% { opacity: 1; }
// 	90% { opacity: 0; }
//   }
//   .element {
// 	@include animation('slide-down 5s 3');
//   }
@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }

  @-moz-keyframes #{$animation-name} {
    @content;
  }

  @-ms-keyframes #{$animation-name} {
    @content;
  }

  @-o-keyframes #{$animation-name} {
    @content;
  }

  @keyframes #{$animation-name} {
    @content;
  }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};
}

//@include transition(all, 0.2s, ease-in-out)
@mixin transition($transition-property, $transition-time, $method) {
  -webkit-transition: $transition-property $transition-time $method;
  -moz-transition: $transition-property $transition-time $method;
  -ms-transition: $transition-property $transition-time $method;
  -o-transition: $transition-property $transition-time $method;
  transition: $transition-property $transition-time $method;
}

// @include opacity(0.8)
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

// @include image-2x("logo2x.png", 100px, 25px)
// @mixin image-2x($image, $width, $height) {

//   @media (min--moz-device-pixel-ratio: 1.3),
//   (-o-min-device-pixel-ratio: 2.6/2),
//   (-webkit-min-device-pixel-ratio: 1.3),
//   (min-device-pixel-ratio: 1.3),
//   (min-resolution: 1.3dppx) {
//     /* on retina, use image that's scaled by 2 */
//     background-image: url($image);
//     background-size: $width $height;
//   }
// }

//@include border-radius(15px)
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
  background-clip: padding-box;
}

@mixin border-top-radius($radius) {
  -webkit-border-top-right-radius: $radius;
  border-top-right-radius: $radius;
  -webkit-border-top-left-radius: $radius;
  border-top-left-radius: $radius;
  background-clip: padding-box;
}

@mixin border-right-radius($radius) {
  -webkit-border-bottom-right-radius: $radius;
  border-bottom-right-radius: $radius;
  -webkit-border-top-right-radius: $radius;
  border-top-right-radius: $radius;
  background-clip: padding-box;
}

@mixin border-bottom-radius($radius) {
  -webkit-border-bottom-right-radius: $radius;
  border-bottom-right-radius: $radius;
  -webkit-border-bottom-left-radius: $radius;
  border-bottom-left-radius: $radius;
  background-clip: padding-box;
}

@mixin border-left-radius($radius) {
  -webkit-border-bottom-left-radius: $radius;
  border-bottom-left-radius: $radius;
  -webkit-border-top-left-radius: $radius;
  border-top-left-radius: $radius;
  background-clip: padding-box;
}

//   @include box-sizing(border-box)
@mixin box-sizing($box-model) {
  -webkit-box-sizing: $box-model; // Safari <= 5
  -moz-box-sizing: $box-model; // Firefox <= 19
  box-sizing: $box-model;
}

//@include clearfix();
@mixin clearfix() {

  &:before,
  &:after {
    content: "";
    display: table;
  }

  &:after {
    clear: both;
  }
}

// @include breakpoint(large) { width: 60%; }
// @mixin breakpoint($point) {
//   @if $point==large {
//     @media (min-width: 64.375em) {
//       @content;
//     }
//   }

//   @else if $point==medium {
//     @media (min-width: 50em) {
//       @content;
//     }
//   }

//   @else if $point==small {
//     @media (min-width: 37.5em) {
//       @content;
//     }
//   }
// }
